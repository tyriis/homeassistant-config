---
# Scenario            Context Pattern                                                             Action
# UI/App Control      user_id is present                                                          ✅ Treat as manual
# Physical Button     context.id is None                                                          ✅ Treat as manual
# Our Automation      context.id contains "garden_tomato_irrigation" or "start_tomato_watering"   ❌ Ignore (not manual)
# Other Automations   Other context.id values                                                     ✅ Treat as manual

alias: Garden Manual Irrigation Control
id: garden_manual_irrigation_control
description: Handle manual irrigation button presses and override automation
mode: restart
triggers:
  # Manual switch turned on
  - platform: state
    entity_id: switch.woox_irrigation_garden2
    to: "on"
    id: manual_on
    # Prevent triggering on startup by requiring a minimum duration in previous state
    for:
      seconds: 2

  # Manual switch turned off
  - platform: state
    entity_id: switch.woox_irrigation_garden2
    to: "off"
    id: manual_off
    # Prevent triggering on startup by requiring a minimum duration in previous state
    for:
      seconds: 2

conditions:
  # Only trigger if this is a manual change (not from our automation system)
  # This checks for physical button presses or UI control, but excludes our own automations
  - condition: template
    value_template: >
      {% set context_id = trigger.to_state.context.id %}
      {% set user_id = trigger.to_state.context.user_id %}
      {% set parent_id = trigger.to_state.context.parent_id %}

      {# Manual UI/App control - user_id is present #}
      {% if user_id is not none %}
        true
      {# Physical button or external control - context.id is None #}
      {% elif context_id is none %}
        true
      {# Exclude our own automation contexts #}
      {% elif 'garden_tomato_irrigation' in (context_id or '') %}
        false
      {% elif 'start_tomato_watering' in (context_id or '') %}
        false
      {# Allow other automations to be treated as manual (e.g., other irrigation scripts) #}
      {% else %}
        true
      {% endif %}

  # Prevent execution during Home Assistant startup
  # Check that the previous state existed for more than 30 seconds (not a startup restoration)
  - condition: template
    value_template: >
      {{  trigger.from_state is not none and
          trigger.from_state.last_changed is not none and
          (as_timestamp(now()) - as_timestamp(trigger.from_state.last_changed)) > 30 }}

actions:
  # Debug logging to understand the context
  - service: system_log.write
    data:
      level: info
      message: >
        Switch state change detected -
        Context ID: {{ trigger.to_state.context.id }},
        User ID: {{ trigger.to_state.context.user_id }},
        Parent ID: {{ trigger.to_state.context.parent_id }},
        New state: {{ trigger.to_state.state }},
        Old state: {{ trigger.from_state.state }}
      logger: homeassistant.components.automation.garden_manual_irrigation_control

  - choose:
      # Manual switch turned ON
      - conditions:
          - condition: trigger
            id: manual_on
        sequence:
          # Release any existing lock first to prevent conflicts
          - service: rest_command.release_lock
            data:
              key: "woox_irrigation_garden2"

          # Create 30-minute watering lock
          - service: rest_command.create_lock
            data:
              key: "woox_irrigation_garden2"
              owner: "Manual Irrigation"
              duration: "30m"

          # Increment daily counter
          - service: counter.increment
            target:
              entity_id: counter.daily_tomato_watering_count

          # Log manual start
          - service: system_log.write
            data:
              level: info
              message: "Manual irrigation started by user"
              logger: homeassistant.components.automation.garden_manual_irrigation_control

      # Manual switch turned OFF
      - conditions:
          - condition: trigger
            id: manual_off
        sequence:
          # Release any existing lock first to prevent conflicts
          - service: rest_command.release_lock
            data:
              key: "woox_irrigation_garden2"

          # Create 1-hour automation block lock (replaces any existing lock)
          - service: rest_command.create_lock
            data:
              key: "woox_irrigation_garden2"
              owner: "Manual Override Block"
              duration: "1h"

          # Log manual stop
          - service: system_log.write
            data:
              level: info
              message: "Manual irrigation stopped by user - automation blocked for 1 hour"
              logger: homeassistant.components.automation.garden_manual_irrigation_control
