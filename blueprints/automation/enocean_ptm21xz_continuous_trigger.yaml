---
blueprint:
  homeassistant:
    min_version: 2024.10.0
  name: EnOcean PTM 21xZ/ZE (MQTT trigger) with Continuous Actions (v3)
  description: |
    Controller automation for executing **press/hold/release** actions triggered by EnOcean PTM 21xZ/ZE switch.

    **Enhanced with continuous triggering support:**
    - Initial press action
    - Continuous repeat actions while held (configurable interval)
    - Hold actions (after initial hold delay)
    - Release actions

    **PTM216Z**
    Make sure to manually create a separate **Text Helper** and define its entity in the automation. It is used to store the last controller event to filter and handle `button hold` actions.

    **SETTINGS**
    In this tab, there is the possibility to change different parameters.
      - **Base topic**
      - **Hold delay**
      - **Repeat interval** (for continuous actions)
      - **PTM216Z - Specific settings**

    ℹ️ Version 2025.06.26 (Enhanced with continuous triggering)
  domain: automation
  input:
    controller:
      name: Controller Name
      description: The name of the controller as defined in Z2M (e.g. Livingroom_Switch)
      default: []
      selector:
        text:
          type: text
          multiple: true
    settings_section:
      name: Settings
      icon: mdi:cog-outline
      collapsed: true
      input:
        base_topic:
          name: Base topic (MQTT)
          description: The base topic as configured in z2m
          default: zigbee2mqtt
        hold_delay:
          name: Hold delay
          description: If the button has been held more than the configured Hold delay, the corresponding held action is triggered.
          default: 500
          selector:
            number:
              min: 100.0
              max: 1000.0
              unit_of_measurement: milliseconds
              mode: box
              step: 10.0
        repeat_interval:
          name: Repeat interval for continuous actions
          description: Interval between continuous actions while button is held (after initial hold delay)
          default: 250
          selector:
            number:
              min: 50.0
              max: 2000.0
              unit_of_measurement: milliseconds
              mode: box
              step: 25.0
        ptm216z_selector:
          name: PTM216Z
          description: Turn **On** only if using a PTM216Z
          default: false
          selector:
            boolean: {}
        helper_last_controller_event:
          name: PTM216Z - Last Controller Event
          description: |
            Input Text used to store the last event fired by the controller.
            You will need to manually create a text input Helper entity for this.
          default: []
          selector:
            entity:
              domain: input_text
    ptm21xz_ze_actions:
      name: PTM21xZ/ZE - Actions
      icon: mdi:gesture-tap
      collapsed: true
      input:
        button_1_pressed:
          name: Button 1 Pressed
          description: Action to run, when button 1 is pressed (initial press).
          default: []
          selector:
            action: {}
        button_1_continuous:
          name: Button 1 Continuous
          description: Action to run continuously while button 1 is held (repeats every interval after hold delay).
          default: []
          selector:
            action: {}
        button_1_held:
          name: Button 1 Held
          description: Action to run, when the button 1 is held (triggered once after hold delay).
          default: []
          selector:
            action: {}
        button_1_released:
          name: Button 1 Released
          description: Action to run, when the button 1 is released after long press.
          default: []
          selector:
            action: {}
        button_2_pressed:
          name: Button 2 Pressed
          description: Action to run, when button 2 is pressed (initial press).
          default: []
          selector:
            action: {}
        button_2_continuous:
          name: Button 2 Continuous
          description: Action to run continuously while button 2 is held (repeats every interval after hold delay).
          default: []
          selector:
            action: {}
        button_2_held:
          name: Button 2 Held
          description: Action to run, when the button 2 is held (triggered once after hold delay).
          default: []
          selector:
            action: {}
        button_2_released:
          name: Button 2 Released
          description: Action to run, when the button 2 is released after long press.
          default: []
          selector:
            action: {}
        button_3_pressed:
          name: Button 3 Pressed
          description: Action to run, when the button 3 is pressed (initial press).
          default: []
          selector:
            action: {}
        button_3_continuous:
          name: Button 3 Continuous
          description: Action to run continuously while button 3 is held (repeats every interval after hold delay).
          default: []
          selector:
            action: {}
        button_3_held:
          name: Button 3 Held
          description: Action to run, when the button 3 is held (triggered once after hold delay).
          default: []
          selector:
            action: {}
        button_3_released:
          name: Button 3 Released
          description: Action to run, when the button 3 is released after long press.
          default: []
          selector:
            action: {}
        button_4_pressed:
          name: Button 4 Pressed
          description: Action to run, when the button 4 is pressed (initial press).
          default: []
          selector:
            action: {}
        button_4_continuous:
          name: Button 4 Continuous
          description: Action to run continuously while button 4 is held (repeats every interval after hold delay).
          default: []
          selector:
            action: {}
        button_4_held:
          name: Button 4 Held
          description: Action to run, when the button 4 is held (triggered once after hold delay).
          default: []
          selector:
            action: {}
        button_4_released:
          name: Button 4 Released
          description: Action to run, when the button 4 is released after long press.
          default: []
          selector:
            action: {}
        button_1_and_3_pressed:
          name: Buttons 1 and 3 Pressed
          description: Action to run, when buttons 1 and 3 are pressed (initial press).
          default: []
          selector:
            action: {}
        button_1_and_3_continuous:
          name: Buttons 1 and 3 Continuous
          description: Action to run continuously while buttons 1 and 3 are held (repeats every interval after hold delay).
          default: []
          selector:
            action: {}
        button_1_and_3_held:
          name: Buttons 1 and 3 Held
          description: Action to run, when buttons 1 and 3 are held (triggered once after hold delay).
          default: []
          selector:
            action: {}
        button_1_and_3_released:
          name: Buttons 1 and 3 Released
          description: Action to run, when buttons 1 and 3 are released after long press.
          default: []
          selector:
            action: {}
        button_2_and_4_pressed:
          name: Buttons 2 and 4 Pressed
          description: Action to run, when buttons 2 and 4 are pressed (initial press).
          default: []
          selector:
            action: {}
        button_2_and_4_continuous:
          name: Buttons 2 and 4 Continuous
          description: Action to run continuously while buttons 2 and 4 are held (repeats every interval after hold delay).
          default: []
          selector:
            action: {}
        button_2_and_4_held:
          name: Buttons 2 and 4 Held
          description: Action to run, when buttons 2 and 4 are held (triggered once after hold delay).
          default: []
          selector:
            action: {}
        button_2_and_4_released:
          name: Buttons 2 and 4 Released
          description: Action to run, when buttons 2 and 4 are released after long press.
          default: []
          selector:
            action: {}
    ptm21xz_ze_two_fingers_actions:
      name: PTM215ZE / PTM216Z - Two fingers actions
      icon: mdi:gesture-two-tap
      collapsed: true
      input:
        button_1_and_4_pressed:
          name: Buttons 1 and 4 Pressed
          description: Action to run, when buttons 1 and 4 are pressed (initial press).
          default: []
          selector:
            action: {}
        button_1_and_4_continuous:
          name: Buttons 1 and 4 Continuous
          description: Action to run continuously while buttons 1 and 4 are held (repeats every interval after hold delay).
          default: []
          selector:
            action: {}
        button_1_and_4_held:
          name: Buttons 1 and 4 Held
          description: Action to run, when buttons 1 and 4 are held (triggered once after hold delay).
          default: []
          selector:
            action: {}
        button_1_and_4_released:
          name: Button 1 and 4 Released
          description: Action to run, when buttons 1 and 4 are released after long press.
          default: []
          selector:
            action: {}
        button_2_and_3_pressed:
          name: Buttons 2 and 3 Pressed
          description: Action to run, when buttons 2 and 3 are pressed (initial press).
          default: []
          selector:
            action: {}
        button_2_and_3_continuous:
          name: Buttons 2 and 3 Continuous
          description: Action to run continuously while buttons 2 and 3 are held (repeats every interval after hold delay).
          default: []
          selector:
            action: {}
        button_2_and_3_held:
          name: Buttons 2 and 3 Held
          description: Action to run, when buttons 2 and 3 are held (triggered once after hold delay).
          default: []
          selector:
            action: {}
        button_2_and_3_released:
          name: Buttons 2 and 3 Released
          description: Action to run, when buttons 2 and 3 are released after long press.
          default: []
          selector:
            action: {}
  source_url: https://github.com/chris-1243/HA---Blueprint/blob/main/PTM_21xZ_ZE_v2.yaml
mode: restart
max_exceeded: silent
trigger_variables:
  base_topic: !input base_topic
  controller: !input controller
triggers:
  - trigger: mqtt
    topic: '{{ base_topic ~ "/+" }}'
conditions:
  and:
    - "{{ trigger.payload_json.action is defined }}"
    - '{{ trigger.topic.split("/")[1] in controller }}'
    - '{{ trigger.payload_json.action.split("_", 1)[0] in ("press", "release") }}'
actions:
  - variables:
      command: "{{ trigger.payload_json.action }}"
      helper_last_controller_event: !input helper_last_controller_event
      hold_delay: !input hold_delay
      repeat_interval: !input repeat_interval
      ptm216z: !input ptm216z_selector
      prev_command: "{% if ptm216z %} {{ states(helper_last_controller_event) }}
        {% else %} none {% endif %}"
  - sequence:
      - if: "{{ ptm216z }}"
        then:
          - action: input_text.set_value
            data:
              entity_id: "{{ helper_last_controller_event }}"
              value: "{{ command }}"
      - choose:
          - conditions: '{{ "release" in command }}'
            sequence:
              - if: "{{ trigger.payload_json.elapsed | int > hold_delay }}"
                then:
                  - choose:
                      - conditions: '{{ command == "release_1" or prev_command == "press_1" }}'
                        sequence: !input button_1_released
                      - conditions: '{{ command == "release_2" or prev_command == "press_2" }}'
                        sequence: !input button_2_released
                      - conditions: '{{ command == "release_3" or prev_command == "press_3" }}'
                        sequence: !input button_3_released
                      - conditions: '{{ command == "release_4" or prev_command == "press_4" }}'
                        sequence: !input button_4_released
                      - conditions: '{{ command == "release_1_and_3" or prev_command == "press_1_and_3" }}'
                        sequence: !input button_1_and_3_released
                      - conditions: '{{ command == "release_2_and_4" or prev_command == "press_2_and_4" }}'
                        sequence: !input button_2_and_4_released
                      - conditions: '{{ command == "release_1_and_4" or prev_command == "press_1_and_4" }}'
                        sequence: !input button_1_and_4_released
                      - conditions: '{{ command == "release_2_and_3" or prev_command == "press_2_and_3" }}'
                        sequence: !input button_2_and_3_released
                else:
                  - choose:
                      - conditions: '{{ command == "release_1" or prev_command == "press_1" }}'
                        sequence: !input button_1_pressed
                      - conditions: '{{ command == "release_2" or prev_command == "press_2" }}'
                        sequence: !input button_2_pressed
                      - conditions: '{{ command == "release_3" or prev_command == "press_3" }}'
                        sequence: !input button_3_pressed
                      - conditions: '{{ command == "release_4" or prev_command == "press_4" }}'
                        sequence: !input button_4_pressed
                      - conditions: '{{ command == "release_1_and_3" or prev_command == "press_1_and_3" }}'
                        sequence: !input button_1_and_3_pressed
                      - conditions: '{{ command == "release_2_and_4" or prev_command == "press_2_and_4" }}'
                        sequence: !input button_2_and_4_pressed
                      - conditions: '{{ command == "release_1_and_4" or prev_command == "press_1_and_4" }}'
                        sequence: !input button_1_and_4_pressed
                      - conditions: '{{ command == "release_2_and_3" or prev_command == "press_2_and_3" }}'
                        sequence: !input button_2_and_3_pressed
          - conditions: '{{ "press" in command }}'
            sequence:
              # Execute initial press action immediately
              - choose:
                  - conditions: '{{ command == "press_1" }}'
                    sequence: !input button_1_pressed
                  - conditions: '{{ command == "press_2" }}'
                    sequence: !input button_2_pressed
                  - conditions: '{{ command == "press_3" }}'
                    sequence: !input button_3_pressed
                  - conditions: '{{ command == "press_4" }}'
                    sequence: !input button_4_pressed
                  - conditions: '{{ command == "press_1_and_3" }}'
                    sequence: !input button_1_and_3_pressed
                  - conditions: '{{ command == "press_2_and_4" }}'
                    sequence: !input button_2_and_4_pressed
                  - conditions: '{{ command == "press_1_and_4" }}'
                    sequence: !input button_1_and_4_pressed
                  - conditions: '{{ command == "press_2_and_3" }}'
                    sequence: !input button_2_and_3_pressed
              # Wait for hold delay
              - delay:
                  milliseconds: "{{ hold_delay }}"
              # Execute hold action once
              - choose:
                  - conditions: '{{ command == "press_1" }}'
                    sequence: !input button_1_held
                  - conditions: '{{ command == "press_2" }}'
                    sequence: !input button_2_held
                  - conditions: '{{ command == "press_3" }}'
                    sequence: !input button_3_held
                  - conditions: '{{ command == "press_4" }}'
                    sequence: !input button_4_held
                  - conditions: '{{ command == "press_1_and_3" }}'
                    sequence: !input button_1_and_3_held
                  - conditions: '{{ command == "press_2_and_4" }}'
                    sequence: !input button_2_and_4_held
                  - conditions: '{{ command == "press_1_and_4" }}'
                    sequence: !input button_1_and_4_held
                  - conditions: '{{ command == "press_2_and_3" }}'
                    sequence: !input button_2_and_3_held
              # Start continuous repeat loop
              - repeat:
                  sequence:
                    - delay:
                        milliseconds: "{{ repeat_interval }}"
                    - choose:
                        - conditions: '{{ command == "press_1" }}'
                          sequence: !input button_1_continuous
                        - conditions: '{{ command == "press_2" }}'
                          sequence: !input button_2_continuous
                        - conditions: '{{ command == "press_3" }}'
                          sequence: !input button_3_continuous
                        - conditions: '{{ command == "press_4" }}'
                          sequence: !input button_4_continuous
                        - conditions: '{{ command == "press_1_and_3" }}'
                          sequence: !input button_1_and_3_continuous
                        - conditions: '{{ command == "press_2_and_4" }}'
                          sequence: !input button_2_and_4_continuous
                        - conditions: '{{ command == "press_1_and_4" }}'
                          sequence: !input button_1_and_4_continuous
                        - conditions: '{{ command == "press_2_and_3" }}'
                          sequence: !input button_2_and_3_continuous
                  until:
                    - condition: template
                      value_template: "false" # This will repeat until automation is stopped by release
